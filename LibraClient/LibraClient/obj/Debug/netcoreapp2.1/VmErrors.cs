// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protos/vm_errors.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Types {

  /// <summary>Holder for reflection information generated from Protos/vm_errors.proto</summary>
  public static partial class VmErrorsReflection {

    #region Descriptor
    /// <summary>File descriptor for Protos/vm_errors.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static VmErrorsReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChZQcm90b3Mvdm1fZXJyb3JzLnByb3RvEgV0eXBlcxodUHJvdG9zL2xhbmd1",
            "YWdlX3N0b3JhZ2UucHJvdG8iUgoSVk1WYWxpZGF0aW9uU3RhdHVzEisKBGNv",
            "ZGUYASABKA4yHS50eXBlcy5WTVZhbGlkYXRpb25TdGF0dXNDb2RlEg8KB21l",
            "c3NhZ2UYAiABKAkiTAoYVk1WZXJpZmljYXRpb25TdGF0dXNMaXN0EjAKC3N0",
            "YXR1c19saXN0GAEgAygLMhsudHlwZXMuVk1WZXJpZmljYXRpb25TdGF0dXMi",
            "igIKFFZNVmVyaWZpY2F0aW9uU3RhdHVzEjsKC3N0YXR1c19raW5kGAEgASgO",
            "MiYudHlwZXMuVk1WZXJpZmljYXRpb25TdGF0dXMuU3RhdHVzS2luZBISCgpt",
            "b2R1bGVfaWR4GAIgASgNEjIKCmVycm9yX2tpbmQYAyABKA4yHi50eXBlcy5W",
            "TVZlcmlmaWNhdGlvbkVycm9yS2luZBIPCgdtZXNzYWdlGAQgASgJEiYKDWRl",
            "cGVuZGVuY3lfaWQYBSABKAsyDy50eXBlcy5Nb2R1bGVJZCI0CgpTdGF0dXNL",
            "aW5kEgoKBlNDUklQVBAAEgoKBk1PRFVMRRABEg4KCkRFUEVOREVOQ1kQAiIl",
            "CgdBYm9ydGVkEhoKEmFib3J0ZWRfZXJyb3JfY29kZRgBIAEoBCK1AQoPQXJp",
            "dGhtZXRpY0Vycm9yEj4KCmVycm9yX2NvZGUYASABKA4yKi50eXBlcy5Bcml0",
            "aG1ldGljRXJyb3IuQXJpdGhtZXRpY0Vycm9yVHlwZSJiChNBcml0aG1ldGlj",
            "RXJyb3JUeXBlEhoKFlVua25vd25Bcml0aG1ldGljRXJyb3IQABINCglVbmRl",
            "cmZsb3cQARIMCghPdmVyZmxvdxACEhIKDkRpdmlzaW9uQnlaZXJvEAMijwIK",
            "FUR5bmFtaWNSZWZlcmVuY2VFcnJvchJKCgplcnJvcl9jb2RlGAEgASgOMjYu",
            "dHlwZXMuRHluYW1pY1JlZmVyZW5jZUVycm9yLkR5bmFtaWNSZWZlcmVuY2VF",
            "cnJvclR5cGUiqQEKGUR5bmFtaWNSZWZlcmVuY2VFcnJvclR5cGUSIAocVW5r",
            "bm93bkR5bmFtaWNSZWZlcmVuY2VFcnJvchAAEhoKFk1vdmVPZkJvcnJvd2Vk",
            "UmVzb3VyY2UQARIcChhHbG9iYWxSZWZBbHJlYWR5UmVsZWFzZWQQAhIVChFN",
            "aXNzaW5nUmVsZWFzZVJlZhADEhkKFUdsb2JhbEFscmVhZHlCb3Jyb3dlZBAE",
            "IuUBCg9FeGVjdXRpb25TdGF0dXMSLgoOcnVudGltZV9zdGF0dXMYASABKA4y",
            "FC50eXBlcy5SdW50aW1lU3RhdHVzSAASIQoHYWJvcnRlZBgCIAEoCzIOLnR5",
            "cGVzLkFib3J0ZWRIABIyChBhcml0aG1ldGljX2Vycm9yGAMgASgLMhYudHlw",
            "ZXMuQXJpdGhtZXRpY0Vycm9ySAASNwoPcmVmZXJlbmNlX2Vycm9yGAQgASgL",
            "MhwudHlwZXMuRHluYW1pY1JlZmVyZW5jZUVycm9ySABCEgoQZXhlY3V0aW9u",
            "X3N0YXR1cyKfAgoIVk1TdGF0dXMSLwoKdmFsaWRhdGlvbhgBIAEoCzIZLnR5",
            "cGVzLlZNVmFsaWRhdGlvblN0YXR1c0gAEjcKDHZlcmlmaWNhdGlvbhgCIAEo",
            "CzIfLnR5cGVzLlZNVmVyaWZpY2F0aW9uU3RhdHVzTGlzdEgAEj8KE2ludmFy",
            "aWFudF92aW9sYXRpb24YAyABKA4yIC50eXBlcy5WTUludmFyaWFudFZpb2xh",
            "dGlvbkVycm9ySAASLQoPZGVzZXJpYWxpemF0aW9uGAQgASgOMhIudHlwZXMu",
            "QmluYXJ5RXJyb3JIABIrCglleGVjdXRpb24YBSABKAsyFi50eXBlcy5FeGVj",
            "dXRpb25TdGF0dXNIAEIMCgplcnJvcl90eXBlKvgDChZWTVZhbGlkYXRpb25T",
            "dGF0dXNDb2RlEhsKF1Vua25vd25WYWxpZGF0aW9uU3RhdHVzEAASFAoQSW52",
            "YWxpZFNpZ25hdHVyZRABEhIKDkludmFsaWRBdXRoS2V5EAISGAoUU2VxdWVu",
            "Y2VOdW1iZXJUb29PbGQQAxIYChRTZXF1ZW5jZU51bWJlclRvb05ldxAEEigK",
            "JEluc3VmZmljaWVudEJhbGFuY2VGb3JUcmFuc2FjdGlvbkZlZRAFEhYKElRy",
            "YW5zYWN0aW9uRXhwaXJlZBAGEh4KGlNlbmRpbmdBY2NvdW50RG9lc05vdEV4",
            "aXN0EAcSFAoQUmVqZWN0ZWRXcml0ZVNldBAIEhMKD0ludmFsaWRXcml0ZVNl",
            "dBAJEh4KGkV4Y2VlZGVkTWF4VHJhbnNhY3Rpb25TaXplEAoSEQoNVW5rbm93",
            "blNjcmlwdBALEhEKDVVua25vd25Nb2R1bGUQDBImCiJNYXhHYXNVbml0c0V4",
            "Y2VlZHNNYXhHYXNVbml0c0JvdW5kEA0SKgomTWF4R2FzVW5pdHNCZWxvd01p",
            "blRyYW5zYWN0aW9uR2FzVW5pdHMQDhIdChlHYXNVbml0UHJpY2VCZWxvd01p",
            "bkJvdW5kEA8SHQoZR2FzVW5pdFByaWNlQWJvdmVNYXhCb3VuZBAQKpgQChdW",
            "TVZlcmlmaWNhdGlvbkVycm9yS2luZBIcChhVbmtub3duVmVyaWZpY2F0aW9u",
            "RXJyb3IQABIUChBJbmRleE91dE9mQm91bmRzEAESHAoYQ29kZVVuaXRJbmRl",
            "eE91dE9mQm91bmRzEAISFAoQUmFuZ2VPdXRPZkJvdW5kcxADEhkKFUludmFs",
            "aWRTaWduYXR1cmVUb2tlbhAEEhwKGEludmFsaWRGaWVsZERlZlJlZmVyZW5j",
            "ZRAFEh0KGVJlY3Vyc2l2ZVN0cnVjdERlZmluaXRpb24QBhIYChRJbnZhbGlk",
            "UmVzb3VyY2VGaWVsZBAHEhYKEkludmFsaWRGYWxsVGhyb3VnaBAIEg8KC0pv",
            "aW5GYWlsdXJlEAkSIAocTmVnYXRpdmVTdGFja1NpemVXaXRoaW5CbG9jaxAK",
            "EhMKD1VuYmFsYW5jZWRTdGFjaxALEiAKHEludmFsaWRNYWluRnVuY3Rpb25T",
            "aWduYXR1cmUQDBIUChBEdXBsaWNhdGVFbGVtZW50EA0SFwoTSW52YWxpZE1v",
            "ZHVsZUhhbmRsZRAOEhcKE1VuaW1wbGVtZW50ZWRIYW5kbGUQDxIWChJJbmNv",
            "bnNpc3RlbnRGaWVsZHMQEBIQCgxVbnVzZWRGaWVsZHMQERIQCgxMb29rdXBG",
            "YWlsZWQQEhIWChJWaXNpYmlsaXR5TWlzbWF0Y2gQExIZChVUeXBlUmVzb2x1",
            "dGlvbkZhaWx1cmUQFBIQCgxUeXBlTWlzbWF0Y2gQFRIVChFNaXNzaW5nRGVw",
            "ZW5kZW5jeRAWEhUKEVBvcFJlZmVyZW5jZUVycm9yEBcSFAoQUG9wUmVzb3Vy",
            "Y2VFcnJvchAYEh8KG1JlbGVhc2VSZWZUeXBlTWlzbWF0Y2hFcnJvchAZEhcK",
            "E0JyVHlwZU1pc21hdGNoRXJyb3IQGhIaChZBYm9ydFR5cGVNaXNtYXRjaEVy",
            "cm9yEBsSGgoWU3RMb2NUeXBlTWlzbWF0Y2hFcnJvchAcEh0KGVN0TG9jVW5z",
            "YWZlVG9EZXN0cm95RXJyb3IQHRIbChdSZXRVbnNhZmVUb0Rlc3Ryb3lFcnJv",
            "chAeEhgKFFJldFR5cGVNaXNtYXRjaEVycm9yEB8SHgoaRnJlZXplUmVmVHlw",
            "ZU1pc21hdGNoRXJyb3IQIBIlCiFGcmVlemVSZWZFeGlzdHNNdXRhYmxlQm9y",
            "cm93RXJyb3IQIRIgChxCb3Jyb3dGaWVsZFR5cGVNaXNtYXRjaEVycm9yECIS",
            "HAoYQm9ycm93RmllbGRCYWRGaWVsZEVycm9yECMSJwojQm9ycm93RmllbGRF",
            "eGlzdHNNdXRhYmxlQm9ycm93RXJyb3IQJBIbChdDb3B5TG9jVW5hdmFpbGFi",
            "bGVFcnJvchAlEhgKFENvcHlMb2NSZXNvdXJjZUVycm9yECYSHAoYQ29weUxv",
            "Y0V4aXN0c0JvcnJvd0Vycm9yECcSGwoXTW92ZUxvY1VuYXZhaWxhYmxlRXJy",
            "b3IQKBIcChhNb3ZlTG9jRXhpc3RzQm9ycm93RXJyb3IQKRIbChdCb3Jyb3dM",
            "b2NSZWZlcmVuY2VFcnJvchAqEh0KGUJvcnJvd0xvY1VuYXZhaWxhYmxlRXJy",
            "b3IQKxIeChpCb3Jyb3dMb2NFeGlzdHNCb3Jyb3dFcnJvchAsEhkKFUNhbGxU",
            "eXBlTWlzbWF0Y2hFcnJvchAtEiUKIUNhbGxCb3Jyb3dlZE11dGFibGVSZWZl",
            "cmVuY2VFcnJvchAuEhkKFVBhY2tUeXBlTWlzbWF0Y2hFcnJvchAvEhsKF1Vu",
            "cGFja1R5cGVNaXNtYXRjaEVycm9yEDASHAoYUmVhZFJlZlR5cGVNaXNtYXRj",
            "aEVycm9yEDESGAoUUmVhZFJlZlJlc291cmNlRXJyb3IQMhIjCh9SZWFkUmVm",
            "RXhpc3RzTXV0YWJsZUJvcnJvd0Vycm9yEDMSHQoZV3JpdGVSZWZUeXBlTWlz",
            "bWF0Y2hFcnJvchA0EhkKFVdyaXRlUmVmUmVzb3VyY2VFcnJvchA1Eh0KGVdy",
            "aXRlUmVmRXhpc3RzQm9ycm93RXJyb3IQNhIjCh9Xcml0ZVJlZk5vTXV0YWJs",
            "ZVJlZmVyZW5jZUVycm9yEDcSHgoaSW50ZWdlck9wVHlwZU1pc21hdGNoRXJy",
            "b3IQOBIeChpCb29sZWFuT3BUeXBlTWlzbWF0Y2hFcnJvchA5Eh8KG0VxdWFs",
            "aXR5T3BUeXBlTWlzbWF0Y2hFcnJvchA6EiMKH0V4aXN0c1Jlc291cmNlVHlw",
            "ZU1pc21hdGNoRXJyb3IQOxIZChVFeGlzdHNOb1Jlc291cmNlRXJyb3IQPBIh",
            "Ch1Cb3Jyb3dHbG9iYWxUeXBlTWlzbWF0Y2hFcnJvchA9Eh8KG0JvcnJvd0ds",
            "b2JhbE5vUmVzb3VyY2VFcnJvchA+Eh0KGU1vdmVGcm9tVHlwZU1pc21hdGNo",
            "RXJyb3IQPxIbChdNb3ZlRnJvbU5vUmVzb3VyY2VFcnJvchBAEiEKHU1vdmVU",
            "b1NlbmRlclR5cGVNaXNtYXRjaEVycm9yEEESHwobTW92ZVRvU2VuZGVyTm9S",
            "ZXNvdXJjZUVycm9yEEISIgoeQ3JlYXRlQWNjb3VudFR5cGVNaXNtYXRjaEVy",
            "cm9yEEMSGAoUR2xvYmFsUmVmZXJlbmNlRXJyb3IQRBIjCh9Nb2R1bGVBZGRy",
            "ZXNzRG9lc05vdE1hdGNoU2VuZGVyEEUSEwoPTm9Nb2R1bGVIYW5kbGVzEEYq",
            "9wEKGVZNSW52YXJpYW50VmlvbGF0aW9uRXJyb3ISIgoeVW5rbm93bkludmFy",
            "aWFudFZpb2xhdGlvbkVycm9yEAASFAoQT3V0T2ZCb3VuZHNJbmRleBABEhQK",
            "EE91dE9mQm91bmRzUmFuZ2UQAhITCg9FbXB0eVZhbHVlU3RhY2sQAxISCg5F",
            "bXB0eUNhbGxTdGFjaxAEEg4KClBDT3ZlcmZsb3cQBRIPCgtMaW5rZXJFcnJv",
            "chAGEhcKE0xvY2FsUmVmZXJlbmNlRXJyb3IQBxIQCgxTdG9yYWdlRXJyb3IQ",
            "CBIVChFJbnRlcm5hbFR5cGVFcnJvchAJKvkBCgtCaW5hcnlFcnJvchIWChJV",
            "bmtub3duQmluYXJ5RXJyb3IQABINCglNYWxmb3JtZWQQARIMCghCYWRNYWdp",
            "YxACEhIKDlVua25vd25WZXJzaW9uEAMSFAoQVW5rbm93blRhYmxlVHlwZRAE",
            "EhgKFFVua25vd25TaWduYXR1cmVUeXBlEAUSGQoVVW5rbm93blNlcmlhbGl6",
            "ZWRUeXBlEAYSEQoNVW5rbm93bk9wY29kZRAHEhIKDkJhZEhlYWRlclRhYmxl",
            "EAgSGwoXVW5leHBlY3RlZFNpZ25hdHVyZVR5cGUQCRISCg5EdXBsaWNhdGVU",
            "YWJsZRAKKoYDCg1SdW50aW1lU3RhdHVzEhgKFFVua25vd25SdW50aW1lU3Rh",
            "dHVzEAASDAoIRXhlY3V0ZWQQARIMCghPdXRPZkdhcxACEhgKFFJlc291cmNl",
            "RG9lc05vdEV4aXN0EAMSGQoVUmVzb3VyY2VBbHJlYWR5RXhpc3RzEAQSGAoU",
            "RXZpY3RlZEFjY291bnRBY2Nlc3MQBRIfChtBY2NvdW50QWRkcmVzc0FscmVh",
            "ZHlFeGlzdHMQBhINCglUeXBlRXJyb3IQBxIPCgtNaXNzaW5nRGF0YRAIEhMK",
            "D0RhdGFGb3JtYXRFcnJvchAJEg8KC0ludmFsaWREYXRhEAoSEwoPUmVtb3Rl",
            "RGF0YUVycm9yEAsSHwobQ2Fubm90V3JpdGVFeGlzdGluZ1Jlc291cmNlEAwS",
            "GwoXVmFsdWVTZXJpYWxpemF0aW9uRXJyb3IQDRIdChlWYWx1ZURlc2VyaWFs",
            "aXphdGlvbkVycm9yEA4SFwoTRHVwbGljYXRlTW9kdWxlTmFtZRAPYgZwcm90",
            "bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Types.LanguageStorageReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Types.VMValidationStatusCode), typeof(global::Types.VMVerificationErrorKind), typeof(global::Types.VMInvariantViolationError), typeof(global::Types.BinaryError), typeof(global::Types.RuntimeStatus), }, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Types.VMValidationStatus), global::Types.VMValidationStatus.Parser, new[]{ "Code", "Message" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Types.VMVerificationStatusList), global::Types.VMVerificationStatusList.Parser, new[]{ "StatusList" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Types.VMVerificationStatus), global::Types.VMVerificationStatus.Parser, new[]{ "StatusKind", "ModuleIdx", "ErrorKind", "Message", "DependencyId" }, null, new[]{ typeof(global::Types.VMVerificationStatus.Types.StatusKind) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Types.Aborted), global::Types.Aborted.Parser, new[]{ "AbortedErrorCode" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Types.ArithmeticError), global::Types.ArithmeticError.Parser, new[]{ "ErrorCode" }, null, new[]{ typeof(global::Types.ArithmeticError.Types.ArithmeticErrorType) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Types.DynamicReferenceError), global::Types.DynamicReferenceError.Parser, new[]{ "ErrorCode" }, null, new[]{ typeof(global::Types.DynamicReferenceError.Types.DynamicReferenceErrorType) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Types.ExecutionStatus), global::Types.ExecutionStatus.Parser, new[]{ "RuntimeStatus", "Aborted", "ArithmeticError", "ReferenceError" }, new[]{ "ExecutionStatus" }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Types.VMStatus), global::Types.VMStatus.Parser, new[]{ "Validation", "Verification", "InvariantViolation", "Deserialization", "Execution" }, new[]{ "ErrorType" }, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  /// <summary>
  /// The status of a transaction as determined by the prologue.
  /// </summary>
  public enum VMValidationStatusCode {
    /// <summary>
    /// We don't want the default value to be valid
    /// </summary>
    [pbr::OriginalName("UnknownValidationStatus")] UnknownValidationStatus = 0,
    /// <summary>
    /// The transaction has a bad signature
    /// </summary>
    [pbr::OriginalName("InvalidSignature")] InvalidSignature = 1,
    /// <summary>
    /// Bad account authentication key
    /// </summary>
    [pbr::OriginalName("InvalidAuthKey")] InvalidAuthKey = 2,
    /// <summary>
    /// Sequence number is too old
    /// </summary>
    [pbr::OriginalName("SequenceNumberTooOld")] SequenceNumberTooOld = 3,
    /// <summary>
    /// Sequence number is too new
    /// </summary>
    [pbr::OriginalName("SequenceNumberTooNew")] SequenceNumberTooNew = 4,
    /// <summary>
    /// Insufficient balance to pay minimum transaction fee
    /// </summary>
    [pbr::OriginalName("InsufficientBalanceForTransactionFee")] InsufficientBalanceForTransactionFee = 5,
    /// <summary>
    /// The transaction has expired
    /// </summary>
    [pbr::OriginalName("TransactionExpired")] TransactionExpired = 6,
    /// <summary>
    /// The sending account does not exist
    /// </summary>
    [pbr::OriginalName("SendingAccountDoesNotExist")] SendingAccountDoesNotExist = 7,
    /// <summary>
    /// This write set transaction was rejected because it did not meet the
    /// requirements for one.
    /// </summary>
    [pbr::OriginalName("RejectedWriteSet")] RejectedWriteSet = 8,
    /// <summary>
    /// This write set transaction cannot be applied to the current state.
    /// </summary>
    [pbr::OriginalName("InvalidWriteSet")] InvalidWriteSet = 9,
    /// <summary>
    /// Length of program field in raw transaction exceeded max length
    /// </summary>
    [pbr::OriginalName("ExceededMaxTransactionSize")] ExceededMaxTransactionSize = 10,
    /// <summary>
    /// This script is not on our whitelist of script.
    /// </summary>
    [pbr::OriginalName("UnknownScript")] UnknownScript = 11,
    /// <summary>
    /// Transaction is trying to publish a new module.
    /// </summary>
    [pbr::OriginalName("UnknownModule")] UnknownModule = 12,
    /// <summary>
    /// Max gas units submitted with transaction exceeds max gas units bound
    /// in VM
    /// </summary>
    [pbr::OriginalName("MaxGasUnitsExceedsMaxGasUnitsBound")] MaxGasUnitsExceedsMaxGasUnitsBound = 13,
    /// <summary>
    /// Max gas units submitted with transaction not enough to cover the
    /// intrinsic cost of the transaction.
    /// </summary>
    [pbr::OriginalName("MaxGasUnitsBelowMinTransactionGasUnits")] MaxGasUnitsBelowMinTransactionGasUnits = 14,
    /// <summary>
    /// Gas unit price submitted with transaction is below minimum gas price
    /// set in the VM.
    /// </summary>
    [pbr::OriginalName("GasUnitPriceBelowMinBound")] GasUnitPriceBelowMinBound = 15,
    /// <summary>
    /// Gas unit price submitted with the transaction is above the maximum
    /// gas price set in the VM.
    /// </summary>
    [pbr::OriginalName("GasUnitPriceAboveMaxBound")] GasUnitPriceAboveMaxBound = 16,
  }

  /// <summary>
  /// When a code module/script is published it is verified. These are the
  /// possible errors that can arise from the verification process.
  /// </summary>
  public enum VMVerificationErrorKind {
    /// <summary>
    /// Likewise default to a unknown verification error
    /// </summary>
    [pbr::OriginalName("UnknownVerificationError")] UnknownVerificationError = 0,
    [pbr::OriginalName("IndexOutOfBounds")] IndexOutOfBounds = 1,
    [pbr::OriginalName("CodeUnitIndexOutOfBounds")] CodeUnitIndexOutOfBounds = 2,
    [pbr::OriginalName("RangeOutOfBounds")] RangeOutOfBounds = 3,
    [pbr::OriginalName("InvalidSignatureToken")] InvalidSignatureToken = 4,
    [pbr::OriginalName("InvalidFieldDefReference")] InvalidFieldDefReference = 5,
    [pbr::OriginalName("RecursiveStructDefinition")] RecursiveStructDefinition = 6,
    [pbr::OriginalName("InvalidResourceField")] InvalidResourceField = 7,
    [pbr::OriginalName("InvalidFallThrough")] InvalidFallThrough = 8,
    [pbr::OriginalName("JoinFailure")] JoinFailure = 9,
    [pbr::OriginalName("NegativeStackSizeWithinBlock")] NegativeStackSizeWithinBlock = 10,
    [pbr::OriginalName("UnbalancedStack")] UnbalancedStack = 11,
    [pbr::OriginalName("InvalidMainFunctionSignature")] InvalidMainFunctionSignature = 12,
    [pbr::OriginalName("DuplicateElement")] DuplicateElement = 13,
    [pbr::OriginalName("InvalidModuleHandle")] InvalidModuleHandle = 14,
    [pbr::OriginalName("UnimplementedHandle")] UnimplementedHandle = 15,
    [pbr::OriginalName("InconsistentFields")] InconsistentFields = 16,
    [pbr::OriginalName("UnusedFields")] UnusedFields = 17,
    [pbr::OriginalName("LookupFailed")] LookupFailed = 18,
    [pbr::OriginalName("VisibilityMismatch")] VisibilityMismatch = 19,
    [pbr::OriginalName("TypeResolutionFailure")] TypeResolutionFailure = 20,
    [pbr::OriginalName("TypeMismatch")] TypeMismatch = 21,
    [pbr::OriginalName("MissingDependency")] MissingDependency = 22,
    [pbr::OriginalName("PopReferenceError")] PopReferenceError = 23,
    [pbr::OriginalName("PopResourceError")] PopResourceError = 24,
    [pbr::OriginalName("ReleaseRefTypeMismatchError")] ReleaseRefTypeMismatchError = 25,
    [pbr::OriginalName("BrTypeMismatchError")] BrTypeMismatchError = 26,
    [pbr::OriginalName("AbortTypeMismatchError")] AbortTypeMismatchError = 27,
    [pbr::OriginalName("StLocTypeMismatchError")] StLocTypeMismatchError = 28,
    [pbr::OriginalName("StLocUnsafeToDestroyError")] StLocUnsafeToDestroyError = 29,
    [pbr::OriginalName("RetUnsafeToDestroyError")] RetUnsafeToDestroyError = 30,
    [pbr::OriginalName("RetTypeMismatchError")] RetTypeMismatchError = 31,
    [pbr::OriginalName("FreezeRefTypeMismatchError")] FreezeRefTypeMismatchError = 32,
    [pbr::OriginalName("FreezeRefExistsMutableBorrowError")] FreezeRefExistsMutableBorrowError = 33,
    [pbr::OriginalName("BorrowFieldTypeMismatchError")] BorrowFieldTypeMismatchError = 34,
    [pbr::OriginalName("BorrowFieldBadFieldError")] BorrowFieldBadFieldError = 35,
    [pbr::OriginalName("BorrowFieldExistsMutableBorrowError")] BorrowFieldExistsMutableBorrowError = 36,
    [pbr::OriginalName("CopyLocUnavailableError")] CopyLocUnavailableError = 37,
    [pbr::OriginalName("CopyLocResourceError")] CopyLocResourceError = 38,
    [pbr::OriginalName("CopyLocExistsBorrowError")] CopyLocExistsBorrowError = 39,
    [pbr::OriginalName("MoveLocUnavailableError")] MoveLocUnavailableError = 40,
    [pbr::OriginalName("MoveLocExistsBorrowError")] MoveLocExistsBorrowError = 41,
    [pbr::OriginalName("BorrowLocReferenceError")] BorrowLocReferenceError = 42,
    [pbr::OriginalName("BorrowLocUnavailableError")] BorrowLocUnavailableError = 43,
    [pbr::OriginalName("BorrowLocExistsBorrowError")] BorrowLocExistsBorrowError = 44,
    [pbr::OriginalName("CallTypeMismatchError")] CallTypeMismatchError = 45,
    [pbr::OriginalName("CallBorrowedMutableReferenceError")] CallBorrowedMutableReferenceError = 46,
    [pbr::OriginalName("PackTypeMismatchError")] PackTypeMismatchError = 47,
    [pbr::OriginalName("UnpackTypeMismatchError")] UnpackTypeMismatchError = 48,
    [pbr::OriginalName("ReadRefTypeMismatchError")] ReadRefTypeMismatchError = 49,
    [pbr::OriginalName("ReadRefResourceError")] ReadRefResourceError = 50,
    [pbr::OriginalName("ReadRefExistsMutableBorrowError")] ReadRefExistsMutableBorrowError = 51,
    [pbr::OriginalName("WriteRefTypeMismatchError")] WriteRefTypeMismatchError = 52,
    [pbr::OriginalName("WriteRefResourceError")] WriteRefResourceError = 53,
    [pbr::OriginalName("WriteRefExistsBorrowError")] WriteRefExistsBorrowError = 54,
    [pbr::OriginalName("WriteRefNoMutableReferenceError")] WriteRefNoMutableReferenceError = 55,
    [pbr::OriginalName("IntegerOpTypeMismatchError")] IntegerOpTypeMismatchError = 56,
    [pbr::OriginalName("BooleanOpTypeMismatchError")] BooleanOpTypeMismatchError = 57,
    [pbr::OriginalName("EqualityOpTypeMismatchError")] EqualityOpTypeMismatchError = 58,
    [pbr::OriginalName("ExistsResourceTypeMismatchError")] ExistsResourceTypeMismatchError = 59,
    [pbr::OriginalName("ExistsNoResourceError")] ExistsNoResourceError = 60,
    [pbr::OriginalName("BorrowGlobalTypeMismatchError")] BorrowGlobalTypeMismatchError = 61,
    [pbr::OriginalName("BorrowGlobalNoResourceError")] BorrowGlobalNoResourceError = 62,
    [pbr::OriginalName("MoveFromTypeMismatchError")] MoveFromTypeMismatchError = 63,
    [pbr::OriginalName("MoveFromNoResourceError")] MoveFromNoResourceError = 64,
    [pbr::OriginalName("MoveToSenderTypeMismatchError")] MoveToSenderTypeMismatchError = 65,
    [pbr::OriginalName("MoveToSenderNoResourceError")] MoveToSenderNoResourceError = 66,
    [pbr::OriginalName("CreateAccountTypeMismatchError")] CreateAccountTypeMismatchError = 67,
    [pbr::OriginalName("GlobalReferenceError")] GlobalReferenceError = 68,
    /// <summary>
    /// The self address of a module the transaction is publishing is not the sender address
    /// </summary>
    [pbr::OriginalName("ModuleAddressDoesNotMatchSender")] ModuleAddressDoesNotMatchSender = 69,
    /// <summary>
    /// The module does not have any module handles. Each module or script must have at least one module handle.
    /// </summary>
    [pbr::OriginalName("NoModuleHandles")] NoModuleHandles = 70,
  }

  /// <summary>
  /// These are errors that the VM might raise if a violation of internal
  /// invariants takes place.
  /// </summary>
  public enum VMInvariantViolationError {
    [pbr::OriginalName("UnknownInvariantViolationError")] UnknownInvariantViolationError = 0,
    [pbr::OriginalName("OutOfBoundsIndex")] OutOfBoundsIndex = 1,
    [pbr::OriginalName("OutOfBoundsRange")] OutOfBoundsRange = 2,
    [pbr::OriginalName("EmptyValueStack")] EmptyValueStack = 3,
    [pbr::OriginalName("EmptyCallStack")] EmptyCallStack = 4,
    [pbr::OriginalName("PCOverflow")] Pcoverflow = 5,
    [pbr::OriginalName("LinkerError")] LinkerError = 6,
    [pbr::OriginalName("LocalReferenceError")] LocalReferenceError = 7,
    [pbr::OriginalName("StorageError")] StorageError = 8,
    [pbr::OriginalName("InternalTypeError")] InternalTypeError = 9,
  }

  /// <summary>
  /// Errors that can arise from binary decoding (deserialization)
  /// </summary>
  public enum BinaryError {
    [pbr::OriginalName("UnknownBinaryError")] UnknownBinaryError = 0,
    [pbr::OriginalName("Malformed")] Malformed = 1,
    [pbr::OriginalName("BadMagic")] BadMagic = 2,
    [pbr::OriginalName("UnknownVersion")] UnknownVersion = 3,
    [pbr::OriginalName("UnknownTableType")] UnknownTableType = 4,
    [pbr::OriginalName("UnknownSignatureType")] UnknownSignatureType = 5,
    [pbr::OriginalName("UnknownSerializedType")] UnknownSerializedType = 6,
    [pbr::OriginalName("UnknownOpcode")] UnknownOpcode = 7,
    [pbr::OriginalName("BadHeaderTable")] BadHeaderTable = 8,
    [pbr::OriginalName("UnexpectedSignatureType")] UnexpectedSignatureType = 9,
    [pbr::OriginalName("DuplicateTable")] DuplicateTable = 10,
  }

  public enum RuntimeStatus {
    [pbr::OriginalName("UnknownRuntimeStatus")] UnknownRuntimeStatus = 0,
    [pbr::OriginalName("Executed")] Executed = 1,
    [pbr::OriginalName("OutOfGas")] OutOfGas = 2,
    /// <summary>
    /// We tried to access a resource that does not exist under the account.
    /// </summary>
    [pbr::OriginalName("ResourceDoesNotExist")] ResourceDoesNotExist = 3,
    /// <summary>
    /// We tried to create a resource under an account where that resource
    /// already exists.
    /// </summary>
    [pbr::OriginalName("ResourceAlreadyExists")] ResourceAlreadyExists = 4,
    /// <summary>
    /// We accessed an account that is evicted.
    /// </summary>
    [pbr::OriginalName("EvictedAccountAccess")] EvictedAccountAccess = 5,
    /// <summary>
    /// We tried to create an account at an address where an account already
    /// exists.
    /// </summary>
    [pbr::OriginalName("AccountAddressAlreadyExists")] AccountAddressAlreadyExists = 6,
    [pbr::OriginalName("TypeError")] TypeError = 7,
    [pbr::OriginalName("MissingData")] MissingData = 8,
    [pbr::OriginalName("DataFormatError")] DataFormatError = 9,
    [pbr::OriginalName("InvalidData")] InvalidData = 10,
    [pbr::OriginalName("RemoteDataError")] RemoteDataError = 11,
    [pbr::OriginalName("CannotWriteExistingResource")] CannotWriteExistingResource = 12,
    [pbr::OriginalName("ValueSerializationError")] ValueSerializationError = 13,
    [pbr::OriginalName("ValueDeserializationError")] ValueDeserializationError = 14,
    /// <summary>
    /// The sender is trying to publish a module named `M`, but the sender's account already contains
    /// a module with this name.
    /// </summary>
    [pbr::OriginalName("DuplicateModuleName")] DuplicateModuleName = 15,
  }

  #endregion

  #region Messages
  public sealed partial class VMValidationStatus : pb::IMessage<VMValidationStatus> {
    private static readonly pb::MessageParser<VMValidationStatus> _parser = new pb::MessageParser<VMValidationStatus>(() => new VMValidationStatus());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<VMValidationStatus> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Types.VmErrorsReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VMValidationStatus() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VMValidationStatus(VMValidationStatus other) : this() {
      code_ = other.code_;
      message_ = other.message_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VMValidationStatus Clone() {
      return new VMValidationStatus(this);
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 1;
    private global::Types.VMValidationStatusCode code_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Types.VMValidationStatusCode Code {
      get { return code_; }
      set {
        code_ = value;
      }
    }

    /// <summary>Field number for the "message" field.</summary>
    public const int MessageFieldNumber = 2;
    private string message_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Message {
      get { return message_; }
      set {
        message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as VMValidationStatus);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(VMValidationStatus other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Code != other.Code) return false;
      if (Message != other.Message) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Code != 0) hash ^= Code.GetHashCode();
      if (Message.Length != 0) hash ^= Message.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Code != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Code);
      }
      if (Message.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Message);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Code != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Code);
      }
      if (Message.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(VMValidationStatus other) {
      if (other == null) {
        return;
      }
      if (other.Code != 0) {
        Code = other.Code;
      }
      if (other.Message.Length != 0) {
        Message = other.Message;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Code = (global::Types.VMValidationStatusCode) input.ReadEnum();
            break;
          }
          case 18: {
            Message = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class VMVerificationStatusList : pb::IMessage<VMVerificationStatusList> {
    private static readonly pb::MessageParser<VMVerificationStatusList> _parser = new pb::MessageParser<VMVerificationStatusList>(() => new VMVerificationStatusList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<VMVerificationStatusList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Types.VmErrorsReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VMVerificationStatusList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VMVerificationStatusList(VMVerificationStatusList other) : this() {
      statusList_ = other.statusList_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VMVerificationStatusList Clone() {
      return new VMVerificationStatusList(this);
    }

    /// <summary>Field number for the "status_list" field.</summary>
    public const int StatusListFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Types.VMVerificationStatus> _repeated_statusList_codec
        = pb::FieldCodec.ForMessage(10, global::Types.VMVerificationStatus.Parser);
    private readonly pbc::RepeatedField<global::Types.VMVerificationStatus> statusList_ = new pbc::RepeatedField<global::Types.VMVerificationStatus>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Types.VMVerificationStatus> StatusList {
      get { return statusList_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as VMVerificationStatusList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(VMVerificationStatusList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!statusList_.Equals(other.statusList_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= statusList_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      statusList_.WriteTo(output, _repeated_statusList_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += statusList_.CalculateSize(_repeated_statusList_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(VMVerificationStatusList other) {
      if (other == null) {
        return;
      }
      statusList_.Add(other.statusList_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            statusList_.AddEntriesFrom(input, _repeated_statusList_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class VMVerificationStatus : pb::IMessage<VMVerificationStatus> {
    private static readonly pb::MessageParser<VMVerificationStatus> _parser = new pb::MessageParser<VMVerificationStatus>(() => new VMVerificationStatus());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<VMVerificationStatus> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Types.VmErrorsReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VMVerificationStatus() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VMVerificationStatus(VMVerificationStatus other) : this() {
      statusKind_ = other.statusKind_;
      moduleIdx_ = other.moduleIdx_;
      errorKind_ = other.errorKind_;
      message_ = other.message_;
      dependencyId_ = other.dependencyId_ != null ? other.dependencyId_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VMVerificationStatus Clone() {
      return new VMVerificationStatus(this);
    }

    /// <summary>Field number for the "status_kind" field.</summary>
    public const int StatusKindFieldNumber = 1;
    private global::Types.VMVerificationStatus.Types.StatusKind statusKind_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Types.VMVerificationStatus.Types.StatusKind StatusKind {
      get { return statusKind_; }
      set {
        statusKind_ = value;
      }
    }

    /// <summary>Field number for the "module_idx" field.</summary>
    public const int ModuleIdxFieldNumber = 2;
    private uint moduleIdx_;
    /// <summary>
    /// For StatusKind::SCRIPT and DEPENDENCY this is ignored.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint ModuleIdx {
      get { return moduleIdx_; }
      set {
        moduleIdx_ = value;
      }
    }

    /// <summary>Field number for the "error_kind" field.</summary>
    public const int ErrorKindFieldNumber = 3;
    private global::Types.VMVerificationErrorKind errorKind_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Types.VMVerificationErrorKind ErrorKind {
      get { return errorKind_; }
      set {
        errorKind_ = value;
      }
    }

    /// <summary>Field number for the "message" field.</summary>
    public const int MessageFieldNumber = 4;
    private string message_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Message {
      get { return message_; }
      set {
        message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "dependency_id" field.</summary>
    public const int DependencyIdFieldNumber = 5;
    private global::Types.ModuleId dependencyId_;
    /// <summary>
    /// For StatusKind::SCRIPT and MODULE this is ignored.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Types.ModuleId DependencyId {
      get { return dependencyId_; }
      set {
        dependencyId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as VMVerificationStatus);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(VMVerificationStatus other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (StatusKind != other.StatusKind) return false;
      if (ModuleIdx != other.ModuleIdx) return false;
      if (ErrorKind != other.ErrorKind) return false;
      if (Message != other.Message) return false;
      if (!object.Equals(DependencyId, other.DependencyId)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (StatusKind != 0) hash ^= StatusKind.GetHashCode();
      if (ModuleIdx != 0) hash ^= ModuleIdx.GetHashCode();
      if (ErrorKind != 0) hash ^= ErrorKind.GetHashCode();
      if (Message.Length != 0) hash ^= Message.GetHashCode();
      if (dependencyId_ != null) hash ^= DependencyId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (StatusKind != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) StatusKind);
      }
      if (ModuleIdx != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(ModuleIdx);
      }
      if (ErrorKind != 0) {
        output.WriteRawTag(24);
        output.WriteEnum((int) ErrorKind);
      }
      if (Message.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Message);
      }
      if (dependencyId_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(DependencyId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (StatusKind != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) StatusKind);
      }
      if (ModuleIdx != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ModuleIdx);
      }
      if (ErrorKind != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ErrorKind);
      }
      if (Message.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
      }
      if (dependencyId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DependencyId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(VMVerificationStatus other) {
      if (other == null) {
        return;
      }
      if (other.StatusKind != 0) {
        StatusKind = other.StatusKind;
      }
      if (other.ModuleIdx != 0) {
        ModuleIdx = other.ModuleIdx;
      }
      if (other.ErrorKind != 0) {
        ErrorKind = other.ErrorKind;
      }
      if (other.Message.Length != 0) {
        Message = other.Message;
      }
      if (other.dependencyId_ != null) {
        if (dependencyId_ == null) {
          DependencyId = new global::Types.ModuleId();
        }
        DependencyId.MergeFrom(other.DependencyId);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            StatusKind = (global::Types.VMVerificationStatus.Types.StatusKind) input.ReadEnum();
            break;
          }
          case 16: {
            ModuleIdx = input.ReadUInt32();
            break;
          }
          case 24: {
            ErrorKind = (global::Types.VMVerificationErrorKind) input.ReadEnum();
            break;
          }
          case 34: {
            Message = input.ReadString();
            break;
          }
          case 42: {
            if (dependencyId_ == null) {
              DependencyId = new global::Types.ModuleId();
            }
            input.ReadMessage(DependencyId);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the VMVerificationStatus message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum StatusKind {
        [pbr::OriginalName("SCRIPT")] Script = 0,
        [pbr::OriginalName("MODULE")] Module = 1,
        [pbr::OriginalName("DEPENDENCY")] Dependency = 2,
      }

    }
    #endregion

  }

  /// <summary>
  /// user-defined abort error code number
  /// </summary>
  public sealed partial class Aborted : pb::IMessage<Aborted> {
    private static readonly pb::MessageParser<Aborted> _parser = new pb::MessageParser<Aborted>(() => new Aborted());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Aborted> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Types.VmErrorsReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Aborted() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Aborted(Aborted other) : this() {
      abortedErrorCode_ = other.abortedErrorCode_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Aborted Clone() {
      return new Aborted(this);
    }

    /// <summary>Field number for the "aborted_error_code" field.</summary>
    public const int AbortedErrorCodeFieldNumber = 1;
    private ulong abortedErrorCode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong AbortedErrorCode {
      get { return abortedErrorCode_; }
      set {
        abortedErrorCode_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Aborted);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Aborted other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AbortedErrorCode != other.AbortedErrorCode) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (AbortedErrorCode != 0UL) hash ^= AbortedErrorCode.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (AbortedErrorCode != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(AbortedErrorCode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (AbortedErrorCode != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(AbortedErrorCode);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Aborted other) {
      if (other == null) {
        return;
      }
      if (other.AbortedErrorCode != 0UL) {
        AbortedErrorCode = other.AbortedErrorCode;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            AbortedErrorCode = input.ReadUInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ArithmeticError : pb::IMessage<ArithmeticError> {
    private static readonly pb::MessageParser<ArithmeticError> _parser = new pb::MessageParser<ArithmeticError>(() => new ArithmeticError());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ArithmeticError> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Types.VmErrorsReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ArithmeticError() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ArithmeticError(ArithmeticError other) : this() {
      errorCode_ = other.errorCode_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ArithmeticError Clone() {
      return new ArithmeticError(this);
    }

    /// <summary>Field number for the "error_code" field.</summary>
    public const int ErrorCodeFieldNumber = 1;
    private global::Types.ArithmeticError.Types.ArithmeticErrorType errorCode_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Types.ArithmeticError.Types.ArithmeticErrorType ErrorCode {
      get { return errorCode_; }
      set {
        errorCode_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ArithmeticError);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ArithmeticError other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ErrorCode != other.ErrorCode) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ErrorCode != 0) hash ^= ErrorCode.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ErrorCode != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) ErrorCode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ErrorCode != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ErrorCode);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ArithmeticError other) {
      if (other == null) {
        return;
      }
      if (other.ErrorCode != 0) {
        ErrorCode = other.ErrorCode;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ErrorCode = (global::Types.ArithmeticError.Types.ArithmeticErrorType) input.ReadEnum();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the ArithmeticError message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum ArithmeticErrorType {
        [pbr::OriginalName("UnknownArithmeticError")] UnknownArithmeticError = 0,
        [pbr::OriginalName("Underflow")] Underflow = 1,
        [pbr::OriginalName("Overflow")] Overflow = 2,
        /// <summary>
        /// Fill with more later
        /// </summary>
        [pbr::OriginalName("DivisionByZero")] DivisionByZero = 3,
      }

    }
    #endregion

  }

  public sealed partial class DynamicReferenceError : pb::IMessage<DynamicReferenceError> {
    private static readonly pb::MessageParser<DynamicReferenceError> _parser = new pb::MessageParser<DynamicReferenceError>(() => new DynamicReferenceError());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DynamicReferenceError> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Types.VmErrorsReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DynamicReferenceError() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DynamicReferenceError(DynamicReferenceError other) : this() {
      errorCode_ = other.errorCode_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DynamicReferenceError Clone() {
      return new DynamicReferenceError(this);
    }

    /// <summary>Field number for the "error_code" field.</summary>
    public const int ErrorCodeFieldNumber = 1;
    private global::Types.DynamicReferenceError.Types.DynamicReferenceErrorType errorCode_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Types.DynamicReferenceError.Types.DynamicReferenceErrorType ErrorCode {
      get { return errorCode_; }
      set {
        errorCode_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DynamicReferenceError);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DynamicReferenceError other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ErrorCode != other.ErrorCode) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ErrorCode != 0) hash ^= ErrorCode.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ErrorCode != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) ErrorCode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ErrorCode != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ErrorCode);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DynamicReferenceError other) {
      if (other == null) {
        return;
      }
      if (other.ErrorCode != 0) {
        ErrorCode = other.ErrorCode;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ErrorCode = (global::Types.DynamicReferenceError.Types.DynamicReferenceErrorType) input.ReadEnum();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the DynamicReferenceError message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum DynamicReferenceErrorType {
        [pbr::OriginalName("UnknownDynamicReferenceError")] UnknownDynamicReferenceError = 0,
        [pbr::OriginalName("MoveOfBorrowedResource")] MoveOfBorrowedResource = 1,
        [pbr::OriginalName("GlobalRefAlreadyReleased")] GlobalRefAlreadyReleased = 2,
        [pbr::OriginalName("MissingReleaseRef")] MissingReleaseRef = 3,
        /// <summary>
        /// Fill with with more later
        /// </summary>
        [pbr::OriginalName("GlobalAlreadyBorrowed")] GlobalAlreadyBorrowed = 4,
      }

    }
    #endregion

  }

  public sealed partial class ExecutionStatus : pb::IMessage<ExecutionStatus> {
    private static readonly pb::MessageParser<ExecutionStatus> _parser = new pb::MessageParser<ExecutionStatus>(() => new ExecutionStatus());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ExecutionStatus> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Types.VmErrorsReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExecutionStatus() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExecutionStatus(ExecutionStatus other) : this() {
      switch (other.ExecutionStatusCase) {
        case ExecutionStatusOneofCase.RuntimeStatus:
          RuntimeStatus = other.RuntimeStatus;
          break;
        case ExecutionStatusOneofCase.Aborted:
          Aborted = other.Aborted.Clone();
          break;
        case ExecutionStatusOneofCase.ArithmeticError:
          ArithmeticError = other.ArithmeticError.Clone();
          break;
        case ExecutionStatusOneofCase.ReferenceError:
          ReferenceError = other.ReferenceError.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExecutionStatus Clone() {
      return new ExecutionStatus(this);
    }

    /// <summary>Field number for the "runtime_status" field.</summary>
    public const int RuntimeStatusFieldNumber = 1;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Types.RuntimeStatus RuntimeStatus {
      get { return executionStatusCase_ == ExecutionStatusOneofCase.RuntimeStatus ? (global::Types.RuntimeStatus) executionStatus_ : 0; }
      set {
        executionStatus_ = value;
        executionStatusCase_ = ExecutionStatusOneofCase.RuntimeStatus;
      }
    }

    /// <summary>Field number for the "aborted" field.</summary>
    public const int AbortedFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Types.Aborted Aborted {
      get { return executionStatusCase_ == ExecutionStatusOneofCase.Aborted ? (global::Types.Aborted) executionStatus_ : null; }
      set {
        executionStatus_ = value;
        executionStatusCase_ = value == null ? ExecutionStatusOneofCase.None : ExecutionStatusOneofCase.Aborted;
      }
    }

    /// <summary>Field number for the "arithmetic_error" field.</summary>
    public const int ArithmeticErrorFieldNumber = 3;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Types.ArithmeticError ArithmeticError {
      get { return executionStatusCase_ == ExecutionStatusOneofCase.ArithmeticError ? (global::Types.ArithmeticError) executionStatus_ : null; }
      set {
        executionStatus_ = value;
        executionStatusCase_ = value == null ? ExecutionStatusOneofCase.None : ExecutionStatusOneofCase.ArithmeticError;
      }
    }

    /// <summary>Field number for the "reference_error" field.</summary>
    public const int ReferenceErrorFieldNumber = 4;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Types.DynamicReferenceError ReferenceError {
      get { return executionStatusCase_ == ExecutionStatusOneofCase.ReferenceError ? (global::Types.DynamicReferenceError) executionStatus_ : null; }
      set {
        executionStatus_ = value;
        executionStatusCase_ = value == null ? ExecutionStatusOneofCase.None : ExecutionStatusOneofCase.ReferenceError;
      }
    }

    private object executionStatus_;
    /// <summary>Enum of possible cases for the "execution_status" oneof.</summary>
    public enum ExecutionStatusOneofCase {
      None = 0,
      RuntimeStatus = 1,
      Aborted = 2,
      ArithmeticError = 3,
      ReferenceError = 4,
    }
    private ExecutionStatusOneofCase executionStatusCase_ = ExecutionStatusOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExecutionStatusOneofCase ExecutionStatusCase {
      get { return executionStatusCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearExecutionStatus() {
      executionStatusCase_ = ExecutionStatusOneofCase.None;
      executionStatus_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ExecutionStatus);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ExecutionStatus other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RuntimeStatus != other.RuntimeStatus) return false;
      if (!object.Equals(Aborted, other.Aborted)) return false;
      if (!object.Equals(ArithmeticError, other.ArithmeticError)) return false;
      if (!object.Equals(ReferenceError, other.ReferenceError)) return false;
      if (ExecutionStatusCase != other.ExecutionStatusCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (executionStatusCase_ == ExecutionStatusOneofCase.RuntimeStatus) hash ^= RuntimeStatus.GetHashCode();
      if (executionStatusCase_ == ExecutionStatusOneofCase.Aborted) hash ^= Aborted.GetHashCode();
      if (executionStatusCase_ == ExecutionStatusOneofCase.ArithmeticError) hash ^= ArithmeticError.GetHashCode();
      if (executionStatusCase_ == ExecutionStatusOneofCase.ReferenceError) hash ^= ReferenceError.GetHashCode();
      hash ^= (int) executionStatusCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (executionStatusCase_ == ExecutionStatusOneofCase.RuntimeStatus) {
        output.WriteRawTag(8);
        output.WriteEnum((int) RuntimeStatus);
      }
      if (executionStatusCase_ == ExecutionStatusOneofCase.Aborted) {
        output.WriteRawTag(18);
        output.WriteMessage(Aborted);
      }
      if (executionStatusCase_ == ExecutionStatusOneofCase.ArithmeticError) {
        output.WriteRawTag(26);
        output.WriteMessage(ArithmeticError);
      }
      if (executionStatusCase_ == ExecutionStatusOneofCase.ReferenceError) {
        output.WriteRawTag(34);
        output.WriteMessage(ReferenceError);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (executionStatusCase_ == ExecutionStatusOneofCase.RuntimeStatus) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) RuntimeStatus);
      }
      if (executionStatusCase_ == ExecutionStatusOneofCase.Aborted) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Aborted);
      }
      if (executionStatusCase_ == ExecutionStatusOneofCase.ArithmeticError) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ArithmeticError);
      }
      if (executionStatusCase_ == ExecutionStatusOneofCase.ReferenceError) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ReferenceError);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ExecutionStatus other) {
      if (other == null) {
        return;
      }
      switch (other.ExecutionStatusCase) {
        case ExecutionStatusOneofCase.RuntimeStatus:
          RuntimeStatus = other.RuntimeStatus;
          break;
        case ExecutionStatusOneofCase.Aborted:
          if (Aborted == null) {
            Aborted = new global::Types.Aborted();
          }
          Aborted.MergeFrom(other.Aborted);
          break;
        case ExecutionStatusOneofCase.ArithmeticError:
          if (ArithmeticError == null) {
            ArithmeticError = new global::Types.ArithmeticError();
          }
          ArithmeticError.MergeFrom(other.ArithmeticError);
          break;
        case ExecutionStatusOneofCase.ReferenceError:
          if (ReferenceError == null) {
            ReferenceError = new global::Types.DynamicReferenceError();
          }
          ReferenceError.MergeFrom(other.ReferenceError);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            executionStatus_ = input.ReadEnum();
            executionStatusCase_ = ExecutionStatusOneofCase.RuntimeStatus;
            break;
          }
          case 18: {
            global::Types.Aborted subBuilder = new global::Types.Aborted();
            if (executionStatusCase_ == ExecutionStatusOneofCase.Aborted) {
              subBuilder.MergeFrom(Aborted);
            }
            input.ReadMessage(subBuilder);
            Aborted = subBuilder;
            break;
          }
          case 26: {
            global::Types.ArithmeticError subBuilder = new global::Types.ArithmeticError();
            if (executionStatusCase_ == ExecutionStatusOneofCase.ArithmeticError) {
              subBuilder.MergeFrom(ArithmeticError);
            }
            input.ReadMessage(subBuilder);
            ArithmeticError = subBuilder;
            break;
          }
          case 34: {
            global::Types.DynamicReferenceError subBuilder = new global::Types.DynamicReferenceError();
            if (executionStatusCase_ == ExecutionStatusOneofCase.ReferenceError) {
              subBuilder.MergeFrom(ReferenceError);
            }
            input.ReadMessage(subBuilder);
            ReferenceError = subBuilder;
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// The status of the VM
  /// </summary>
  public sealed partial class VMStatus : pb::IMessage<VMStatus> {
    private static readonly pb::MessageParser<VMStatus> _parser = new pb::MessageParser<VMStatus>(() => new VMStatus());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<VMStatus> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Types.VmErrorsReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VMStatus() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VMStatus(VMStatus other) : this() {
      switch (other.ErrorTypeCase) {
        case ErrorTypeOneofCase.Validation:
          Validation = other.Validation.Clone();
          break;
        case ErrorTypeOneofCase.Verification:
          Verification = other.Verification.Clone();
          break;
        case ErrorTypeOneofCase.InvariantViolation:
          InvariantViolation = other.InvariantViolation;
          break;
        case ErrorTypeOneofCase.Deserialization:
          Deserialization = other.Deserialization;
          break;
        case ErrorTypeOneofCase.Execution:
          Execution = other.Execution.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VMStatus Clone() {
      return new VMStatus(this);
    }

    /// <summary>Field number for the "validation" field.</summary>
    public const int ValidationFieldNumber = 1;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Types.VMValidationStatus Validation {
      get { return errorTypeCase_ == ErrorTypeOneofCase.Validation ? (global::Types.VMValidationStatus) errorType_ : null; }
      set {
        errorType_ = value;
        errorTypeCase_ = value == null ? ErrorTypeOneofCase.None : ErrorTypeOneofCase.Validation;
      }
    }

    /// <summary>Field number for the "verification" field.</summary>
    public const int VerificationFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Types.VMVerificationStatusList Verification {
      get { return errorTypeCase_ == ErrorTypeOneofCase.Verification ? (global::Types.VMVerificationStatusList) errorType_ : null; }
      set {
        errorType_ = value;
        errorTypeCase_ = value == null ? ErrorTypeOneofCase.None : ErrorTypeOneofCase.Verification;
      }
    }

    /// <summary>Field number for the "invariant_violation" field.</summary>
    public const int InvariantViolationFieldNumber = 3;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Types.VMInvariantViolationError InvariantViolation {
      get { return errorTypeCase_ == ErrorTypeOneofCase.InvariantViolation ? (global::Types.VMInvariantViolationError) errorType_ : 0; }
      set {
        errorType_ = value;
        errorTypeCase_ = ErrorTypeOneofCase.InvariantViolation;
      }
    }

    /// <summary>Field number for the "deserialization" field.</summary>
    public const int DeserializationFieldNumber = 4;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Types.BinaryError Deserialization {
      get { return errorTypeCase_ == ErrorTypeOneofCase.Deserialization ? (global::Types.BinaryError) errorType_ : 0; }
      set {
        errorType_ = value;
        errorTypeCase_ = ErrorTypeOneofCase.Deserialization;
      }
    }

    /// <summary>Field number for the "execution" field.</summary>
    public const int ExecutionFieldNumber = 5;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Types.ExecutionStatus Execution {
      get { return errorTypeCase_ == ErrorTypeOneofCase.Execution ? (global::Types.ExecutionStatus) errorType_ : null; }
      set {
        errorType_ = value;
        errorTypeCase_ = value == null ? ErrorTypeOneofCase.None : ErrorTypeOneofCase.Execution;
      }
    }

    private object errorType_;
    /// <summary>Enum of possible cases for the "error_type" oneof.</summary>
    public enum ErrorTypeOneofCase {
      None = 0,
      Validation = 1,
      Verification = 2,
      InvariantViolation = 3,
      Deserialization = 4,
      Execution = 5,
    }
    private ErrorTypeOneofCase errorTypeCase_ = ErrorTypeOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ErrorTypeOneofCase ErrorTypeCase {
      get { return errorTypeCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearErrorType() {
      errorTypeCase_ = ErrorTypeOneofCase.None;
      errorType_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as VMStatus);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(VMStatus other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Validation, other.Validation)) return false;
      if (!object.Equals(Verification, other.Verification)) return false;
      if (InvariantViolation != other.InvariantViolation) return false;
      if (Deserialization != other.Deserialization) return false;
      if (!object.Equals(Execution, other.Execution)) return false;
      if (ErrorTypeCase != other.ErrorTypeCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (errorTypeCase_ == ErrorTypeOneofCase.Validation) hash ^= Validation.GetHashCode();
      if (errorTypeCase_ == ErrorTypeOneofCase.Verification) hash ^= Verification.GetHashCode();
      if (errorTypeCase_ == ErrorTypeOneofCase.InvariantViolation) hash ^= InvariantViolation.GetHashCode();
      if (errorTypeCase_ == ErrorTypeOneofCase.Deserialization) hash ^= Deserialization.GetHashCode();
      if (errorTypeCase_ == ErrorTypeOneofCase.Execution) hash ^= Execution.GetHashCode();
      hash ^= (int) errorTypeCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (errorTypeCase_ == ErrorTypeOneofCase.Validation) {
        output.WriteRawTag(10);
        output.WriteMessage(Validation);
      }
      if (errorTypeCase_ == ErrorTypeOneofCase.Verification) {
        output.WriteRawTag(18);
        output.WriteMessage(Verification);
      }
      if (errorTypeCase_ == ErrorTypeOneofCase.InvariantViolation) {
        output.WriteRawTag(24);
        output.WriteEnum((int) InvariantViolation);
      }
      if (errorTypeCase_ == ErrorTypeOneofCase.Deserialization) {
        output.WriteRawTag(32);
        output.WriteEnum((int) Deserialization);
      }
      if (errorTypeCase_ == ErrorTypeOneofCase.Execution) {
        output.WriteRawTag(42);
        output.WriteMessage(Execution);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (errorTypeCase_ == ErrorTypeOneofCase.Validation) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Validation);
      }
      if (errorTypeCase_ == ErrorTypeOneofCase.Verification) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Verification);
      }
      if (errorTypeCase_ == ErrorTypeOneofCase.InvariantViolation) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) InvariantViolation);
      }
      if (errorTypeCase_ == ErrorTypeOneofCase.Deserialization) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Deserialization);
      }
      if (errorTypeCase_ == ErrorTypeOneofCase.Execution) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Execution);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(VMStatus other) {
      if (other == null) {
        return;
      }
      switch (other.ErrorTypeCase) {
        case ErrorTypeOneofCase.Validation:
          if (Validation == null) {
            Validation = new global::Types.VMValidationStatus();
          }
          Validation.MergeFrom(other.Validation);
          break;
        case ErrorTypeOneofCase.Verification:
          if (Verification == null) {
            Verification = new global::Types.VMVerificationStatusList();
          }
          Verification.MergeFrom(other.Verification);
          break;
        case ErrorTypeOneofCase.InvariantViolation:
          InvariantViolation = other.InvariantViolation;
          break;
        case ErrorTypeOneofCase.Deserialization:
          Deserialization = other.Deserialization;
          break;
        case ErrorTypeOneofCase.Execution:
          if (Execution == null) {
            Execution = new global::Types.ExecutionStatus();
          }
          Execution.MergeFrom(other.Execution);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            global::Types.VMValidationStatus subBuilder = new global::Types.VMValidationStatus();
            if (errorTypeCase_ == ErrorTypeOneofCase.Validation) {
              subBuilder.MergeFrom(Validation);
            }
            input.ReadMessage(subBuilder);
            Validation = subBuilder;
            break;
          }
          case 18: {
            global::Types.VMVerificationStatusList subBuilder = new global::Types.VMVerificationStatusList();
            if (errorTypeCase_ == ErrorTypeOneofCase.Verification) {
              subBuilder.MergeFrom(Verification);
            }
            input.ReadMessage(subBuilder);
            Verification = subBuilder;
            break;
          }
          case 24: {
            errorType_ = input.ReadEnum();
            errorTypeCase_ = ErrorTypeOneofCase.InvariantViolation;
            break;
          }
          case 32: {
            errorType_ = input.ReadEnum();
            errorTypeCase_ = ErrorTypeOneofCase.Deserialization;
            break;
          }
          case 42: {
            global::Types.ExecutionStatus subBuilder = new global::Types.ExecutionStatus();
            if (errorTypeCase_ == ErrorTypeOneofCase.Execution) {
              subBuilder.MergeFrom(Execution);
            }
            input.ReadMessage(subBuilder);
            Execution = subBuilder;
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
