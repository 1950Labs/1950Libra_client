// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protos/events.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Types {

  /// <summary>Holder for reflection information generated from Protos/events.proto</summary>
  public static partial class EventsReflection {

    #region Descriptor
    /// <summary>File descriptor for Protos/events.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static EventsReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChNQcm90b3MvZXZlbnRzLnByb3RvEgV0eXBlcxoYUHJvdG9zL2FjY2Vzc19w",
            "YXRoLnByb3RvGhJQcm90b3MvcHJvb2YucHJvdG8iXAoFRXZlbnQSJgoLYWNj",
            "ZXNzX3BhdGgYASABKAsyES50eXBlcy5BY2Nlc3NQYXRoEhcKD3NlcXVlbmNl",
            "X251bWJlchgCIAEoBBISCgpldmVudF9kYXRhGAMgASgMIoEBCg5FdmVudFdp",
            "dGhQcm9vZhIbChN0cmFuc2FjdGlvbl92ZXJzaW9uGAEgASgEEhMKC2V2ZW50",
            "X2luZGV4GAIgASgEEhsKBWV2ZW50GAMgASgLMgwudHlwZXMuRXZlbnQSIAoF",
            "cHJvb2YYBCABKAsyES50eXBlcy5FdmVudFByb29mIioKCkV2ZW50c0xpc3QS",
            "HAoGZXZlbnRzGAEgAygLMgwudHlwZXMuRXZlbnQiQgoRRXZlbnRzRm9yVmVy",
            "c2lvbnMSLQoSZXZlbnRzX2Zvcl92ZXJzaW9uGAEgAygLMhEudHlwZXMuRXZl",
            "bnRzTGlzdGIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Types.AccessPathReflection.Descriptor, global::Types.ProofReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Types.Event), global::Types.Event.Parser, new[]{ "AccessPath", "SequenceNumber", "EventData" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Types.EventWithProof), global::Types.EventWithProof.Parser, new[]{ "TransactionVersion", "EventIndex", "Event", "Proof" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Types.EventsList), global::Types.EventsList.Parser, new[]{ "Events" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Types.EventsForVersions), global::Types.EventsForVersions.Parser, new[]{ "EventsForVersion" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// An event emitted from a smart contract
  /// </summary>
  public sealed partial class Event : pb::IMessage<Event> {
    private static readonly pb::MessageParser<Event> _parser = new pb::MessageParser<Event>(() => new Event());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Event> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Types.EventsReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Event() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Event(Event other) : this() {
      accessPath_ = other.accessPath_ != null ? other.accessPath_.Clone() : null;
      sequenceNumber_ = other.sequenceNumber_;
      eventData_ = other.eventData_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Event Clone() {
      return new Event(this);
    }

    /// <summary>Field number for the "access_path" field.</summary>
    public const int AccessPathFieldNumber = 1;
    private global::Types.AccessPath accessPath_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Types.AccessPath AccessPath {
      get { return accessPath_; }
      set {
        accessPath_ = value;
      }
    }

    /// <summary>Field number for the "sequence_number" field.</summary>
    public const int SequenceNumberFieldNumber = 2;
    private ulong sequenceNumber_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong SequenceNumber {
      get { return sequenceNumber_; }
      set {
        sequenceNumber_ = value;
      }
    }

    /// <summary>Field number for the "event_data" field.</summary>
    public const int EventDataFieldNumber = 3;
    private pb::ByteString eventData_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString EventData {
      get { return eventData_; }
      set {
        eventData_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Event);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Event other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(AccessPath, other.AccessPath)) return false;
      if (SequenceNumber != other.SequenceNumber) return false;
      if (EventData != other.EventData) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (accessPath_ != null) hash ^= AccessPath.GetHashCode();
      if (SequenceNumber != 0UL) hash ^= SequenceNumber.GetHashCode();
      if (EventData.Length != 0) hash ^= EventData.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (accessPath_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(AccessPath);
      }
      if (SequenceNumber != 0UL) {
        output.WriteRawTag(16);
        output.WriteUInt64(SequenceNumber);
      }
      if (EventData.Length != 0) {
        output.WriteRawTag(26);
        output.WriteBytes(EventData);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (accessPath_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AccessPath);
      }
      if (SequenceNumber != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(SequenceNumber);
      }
      if (EventData.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(EventData);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Event other) {
      if (other == null) {
        return;
      }
      if (other.accessPath_ != null) {
        if (accessPath_ == null) {
          AccessPath = new global::Types.AccessPath();
        }
        AccessPath.MergeFrom(other.AccessPath);
      }
      if (other.SequenceNumber != 0UL) {
        SequenceNumber = other.SequenceNumber;
      }
      if (other.EventData.Length != 0) {
        EventData = other.EventData;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (accessPath_ == null) {
              AccessPath = new global::Types.AccessPath();
            }
            input.ReadMessage(AccessPath);
            break;
          }
          case 16: {
            SequenceNumber = input.ReadUInt64();
            break;
          }
          case 26: {
            EventData = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// An event along with the proof for the event
  /// </summary>
  public sealed partial class EventWithProof : pb::IMessage<EventWithProof> {
    private static readonly pb::MessageParser<EventWithProof> _parser = new pb::MessageParser<EventWithProof>(() => new EventWithProof());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventWithProof> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Types.EventsReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventWithProof() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventWithProof(EventWithProof other) : this() {
      transactionVersion_ = other.transactionVersion_;
      eventIndex_ = other.eventIndex_;
      event_ = other.event_ != null ? other.event_.Clone() : null;
      proof_ = other.proof_ != null ? other.proof_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventWithProof Clone() {
      return new EventWithProof(this);
    }

    /// <summary>Field number for the "transaction_version" field.</summary>
    public const int TransactionVersionFieldNumber = 1;
    private ulong transactionVersion_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong TransactionVersion {
      get { return transactionVersion_; }
      set {
        transactionVersion_ = value;
      }
    }

    /// <summary>Field number for the "event_index" field.</summary>
    public const int EventIndexFieldNumber = 2;
    private ulong eventIndex_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong EventIndex {
      get { return eventIndex_; }
      set {
        eventIndex_ = value;
      }
    }

    /// <summary>Field number for the "event" field.</summary>
    public const int EventFieldNumber = 3;
    private global::Types.Event event_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Types.Event Event {
      get { return event_; }
      set {
        event_ = value;
      }
    }

    /// <summary>Field number for the "proof" field.</summary>
    public const int ProofFieldNumber = 4;
    private global::Types.EventProof proof_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Types.EventProof Proof {
      get { return proof_; }
      set {
        proof_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventWithProof);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventWithProof other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TransactionVersion != other.TransactionVersion) return false;
      if (EventIndex != other.EventIndex) return false;
      if (!object.Equals(Event, other.Event)) return false;
      if (!object.Equals(Proof, other.Proof)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (TransactionVersion != 0UL) hash ^= TransactionVersion.GetHashCode();
      if (EventIndex != 0UL) hash ^= EventIndex.GetHashCode();
      if (event_ != null) hash ^= Event.GetHashCode();
      if (proof_ != null) hash ^= Proof.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (TransactionVersion != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(TransactionVersion);
      }
      if (EventIndex != 0UL) {
        output.WriteRawTag(16);
        output.WriteUInt64(EventIndex);
      }
      if (event_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Event);
      }
      if (proof_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Proof);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (TransactionVersion != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(TransactionVersion);
      }
      if (EventIndex != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(EventIndex);
      }
      if (event_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Event);
      }
      if (proof_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Proof);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventWithProof other) {
      if (other == null) {
        return;
      }
      if (other.TransactionVersion != 0UL) {
        TransactionVersion = other.TransactionVersion;
      }
      if (other.EventIndex != 0UL) {
        EventIndex = other.EventIndex;
      }
      if (other.event_ != null) {
        if (event_ == null) {
          Event = new global::Types.Event();
        }
        Event.MergeFrom(other.Event);
      }
      if (other.proof_ != null) {
        if (proof_ == null) {
          Proof = new global::Types.EventProof();
        }
        Proof.MergeFrom(other.Proof);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            TransactionVersion = input.ReadUInt64();
            break;
          }
          case 16: {
            EventIndex = input.ReadUInt64();
            break;
          }
          case 26: {
            if (event_ == null) {
              Event = new global::Types.Event();
            }
            input.ReadMessage(Event);
            break;
          }
          case 34: {
            if (proof_ == null) {
              Proof = new global::Types.EventProof();
            }
            input.ReadMessage(Proof);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// A list of events.
  /// </summary>
  public sealed partial class EventsList : pb::IMessage<EventsList> {
    private static readonly pb::MessageParser<EventsList> _parser = new pb::MessageParser<EventsList>(() => new EventsList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventsList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Types.EventsReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventsList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventsList(EventsList other) : this() {
      events_ = other.events_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventsList Clone() {
      return new EventsList(this);
    }

    /// <summary>Field number for the "events" field.</summary>
    public const int EventsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Types.Event> _repeated_events_codec
        = pb::FieldCodec.ForMessage(10, global::Types.Event.Parser);
    private readonly pbc::RepeatedField<global::Types.Event> events_ = new pbc::RepeatedField<global::Types.Event>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Types.Event> Events {
      get { return events_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventsList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventsList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!events_.Equals(other.events_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= events_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      events_.WriteTo(output, _repeated_events_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += events_.CalculateSize(_repeated_events_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventsList other) {
      if (other == null) {
        return;
      }
      events_.Add(other.events_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            events_.AddEntriesFrom(input, _repeated_events_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// A list of EventList's, each representing all events for a transaction.
  /// </summary>
  public sealed partial class EventsForVersions : pb::IMessage<EventsForVersions> {
    private static readonly pb::MessageParser<EventsForVersions> _parser = new pb::MessageParser<EventsForVersions>(() => new EventsForVersions());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventsForVersions> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Types.EventsReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventsForVersions() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventsForVersions(EventsForVersions other) : this() {
      eventsForVersion_ = other.eventsForVersion_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventsForVersions Clone() {
      return new EventsForVersions(this);
    }

    /// <summary>Field number for the "events_for_version" field.</summary>
    public const int EventsForVersionFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Types.EventsList> _repeated_eventsForVersion_codec
        = pb::FieldCodec.ForMessage(10, global::Types.EventsList.Parser);
    private readonly pbc::RepeatedField<global::Types.EventsList> eventsForVersion_ = new pbc::RepeatedField<global::Types.EventsList>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Types.EventsList> EventsForVersion {
      get { return eventsForVersion_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventsForVersions);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventsForVersions other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!eventsForVersion_.Equals(other.eventsForVersion_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= eventsForVersion_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      eventsForVersion_.WriteTo(output, _repeated_eventsForVersion_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += eventsForVersion_.CalculateSize(_repeated_eventsForVersion_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventsForVersions other) {
      if (other == null) {
        return;
      }
      eventsForVersion_.Add(other.eventsForVersion_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            eventsForVersion_.AddEntriesFrom(input, _repeated_eventsForVersion_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
