// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protos/account_state_blob.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Types {

  /// <summary>Holder for reflection information generated from Protos/account_state_blob.proto</summary>
  public static partial class AccountStateBlobReflection {

    #region Descriptor
    /// <summary>File descriptor for Protos/account_state_blob.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static AccountStateBlobReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ch9Qcm90b3MvYWNjb3VudF9zdGF0ZV9ibG9iLnByb3RvEgV0eXBlcxoSUHJv",
            "dG9zL3Byb29mLnByb3RvIiAKEEFjY291bnRTdGF0ZUJsb2ISDAoEYmxvYhgB",
            "IAEoDCJ4ChVBY2NvdW50U3RhdGVXaXRoUHJvb2YSDwoHdmVyc2lvbhgBIAEo",
            "BBIlCgRibG9iGAIgASgLMhcudHlwZXMuQWNjb3VudFN0YXRlQmxvYhInCgVw",
            "cm9vZhgDIAEoCzIYLnR5cGVzLkFjY291bnRTdGF0ZVByb29mYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Types.ProofReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Types.AccountStateBlob), global::Types.AccountStateBlob.Parser, new[]{ "Blob" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Types.AccountStateWithProof), global::Types.AccountStateWithProof.Parser, new[]{ "Version", "Blob", "Proof" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class AccountStateBlob : pb::IMessage<AccountStateBlob> {
    private static readonly pb::MessageParser<AccountStateBlob> _parser = new pb::MessageParser<AccountStateBlob>(() => new AccountStateBlob());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AccountStateBlob> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Types.AccountStateBlobReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AccountStateBlob() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AccountStateBlob(AccountStateBlob other) : this() {
      blob_ = other.blob_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AccountStateBlob Clone() {
      return new AccountStateBlob(this);
    }

    /// <summary>Field number for the "blob" field.</summary>
    public const int BlobFieldNumber = 1;
    private pb::ByteString blob_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Blob {
      get { return blob_; }
      set {
        blob_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AccountStateBlob);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AccountStateBlob other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Blob != other.Blob) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Blob.Length != 0) hash ^= Blob.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Blob.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(Blob);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Blob.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Blob);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AccountStateBlob other) {
      if (other == null) {
        return;
      }
      if (other.Blob.Length != 0) {
        Blob = other.Blob;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Blob = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  public sealed partial class AccountStateWithProof : pb::IMessage<AccountStateWithProof> {
    private static readonly pb::MessageParser<AccountStateWithProof> _parser = new pb::MessageParser<AccountStateWithProof>(() => new AccountStateWithProof());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AccountStateWithProof> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Types.AccountStateBlobReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AccountStateWithProof() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AccountStateWithProof(AccountStateWithProof other) : this() {
      version_ = other.version_;
      blob_ = other.blob_ != null ? other.blob_.Clone() : null;
      proof_ = other.proof_ != null ? other.proof_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AccountStateWithProof Clone() {
      return new AccountStateWithProof(this);
    }

    /// <summary>Field number for the "version" field.</summary>
    public const int VersionFieldNumber = 1;
    private ulong version_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong Version {
      get { return version_; }
      set {
        version_ = value;
      }
    }

    /// <summary>Field number for the "blob" field.</summary>
    public const int BlobFieldNumber = 2;
    private global::Types.AccountStateBlob blob_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Types.AccountStateBlob Blob {
      get { return blob_; }
      set {
        blob_ = value;
      }
    }

    /// <summary>Field number for the "proof" field.</summary>
    public const int ProofFieldNumber = 3;
    private global::Types.AccountStateProof proof_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Types.AccountStateProof Proof {
      get { return proof_; }
      set {
        proof_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AccountStateWithProof);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AccountStateWithProof other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Version != other.Version) return false;
      if (!object.Equals(Blob, other.Blob)) return false;
      if (!object.Equals(Proof, other.Proof)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Version != 0UL) hash ^= Version.GetHashCode();
      if (blob_ != null) hash ^= Blob.GetHashCode();
      if (proof_ != null) hash ^= Proof.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Version != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(Version);
      }
      if (blob_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Blob);
      }
      if (proof_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Proof);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Version != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Version);
      }
      if (blob_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Blob);
      }
      if (proof_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Proof);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AccountStateWithProof other) {
      if (other == null) {
        return;
      }
      if (other.Version != 0UL) {
        Version = other.Version;
      }
      if (other.blob_ != null) {
        if (blob_ == null) {
          Blob = new global::Types.AccountStateBlob();
        }
        Blob.MergeFrom(other.Blob);
      }
      if (other.proof_ != null) {
        if (proof_ == null) {
          Proof = new global::Types.AccountStateProof();
        }
        Proof.MergeFrom(other.Proof);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Version = input.ReadUInt64();
            break;
          }
          case 18: {
            if (blob_ == null) {
              Blob = new global::Types.AccountStateBlob();
            }
            input.ReadMessage(Blob);
            break;
          }
          case 26: {
            if (proof_ == null) {
              Proof = new global::Types.AccountStateProof();
            }
            input.ReadMessage(Proof);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
