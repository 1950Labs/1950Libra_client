// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protos/validator_public_keys.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Types {

  /// <summary>Holder for reflection information generated from Protos/validator_public_keys.proto</summary>
  public static partial class ValidatorPublicKeysReflection {

    #region Descriptor
    /// <summary>File descriptor for Protos/validator_public_keys.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ValidatorPublicKeysReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiJQcm90b3MvdmFsaWRhdG9yX3B1YmxpY19rZXlzLnByb3RvEgV0eXBlcyKV",
            "AQoTVmFsaWRhdG9yUHVibGljS2V5cxIXCg9hY2NvdW50X2FkZHJlc3MYASAB",
            "KAwSHAoUY29uc2Vuc3VzX3B1YmxpY19rZXkYAiABKAwSIgoabmV0d29ya19z",
            "aWduaW5nX3B1YmxpY19rZXkYAyABKAwSIwobbmV0d29ya19pZGVudGl0eV9w",
            "dWJsaWNfa2V5GAQgASgMYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Types.ValidatorPublicKeys), global::Types.ValidatorPublicKeys.Parser, new[]{ "AccountAddress", "ConsensusPublicKey", "NetworkSigningPublicKey", "NetworkIdentityPublicKey" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// Protobuf definition for the Rust struct ValidatorPublicKeys
  /// </summary>
  public sealed partial class ValidatorPublicKeys : pb::IMessage<ValidatorPublicKeys> {
    private static readonly pb::MessageParser<ValidatorPublicKeys> _parser = new pb::MessageParser<ValidatorPublicKeys>(() => new ValidatorPublicKeys());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ValidatorPublicKeys> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Types.ValidatorPublicKeysReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ValidatorPublicKeys() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ValidatorPublicKeys(ValidatorPublicKeys other) : this() {
      accountAddress_ = other.accountAddress_;
      consensusPublicKey_ = other.consensusPublicKey_;
      networkSigningPublicKey_ = other.networkSigningPublicKey_;
      networkIdentityPublicKey_ = other.networkIdentityPublicKey_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ValidatorPublicKeys Clone() {
      return new ValidatorPublicKeys(this);
    }

    /// <summary>Field number for the "account_address" field.</summary>
    public const int AccountAddressFieldNumber = 1;
    private pb::ByteString accountAddress_ = pb::ByteString.Empty;
    /// <summary>
    /// Validator account address
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString AccountAddress {
      get { return accountAddress_; }
      set {
        accountAddress_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "consensus_public_key" field.</summary>
    public const int ConsensusPublicKeyFieldNumber = 2;
    private pb::ByteString consensusPublicKey_ = pb::ByteString.Empty;
    /// <summary>
    /// Consensus public key
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString ConsensusPublicKey {
      get { return consensusPublicKey_; }
      set {
        consensusPublicKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "network_signing_public_key" field.</summary>
    public const int NetworkSigningPublicKeyFieldNumber = 3;
    private pb::ByteString networkSigningPublicKey_ = pb::ByteString.Empty;
    /// <summary>
    /// Network signing publick key
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString NetworkSigningPublicKey {
      get { return networkSigningPublicKey_; }
      set {
        networkSigningPublicKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "network_identity_public_key" field.</summary>
    public const int NetworkIdentityPublicKeyFieldNumber = 4;
    private pb::ByteString networkIdentityPublicKey_ = pb::ByteString.Empty;
    /// <summary>
    //// Network identity publick key
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString NetworkIdentityPublicKey {
      get { return networkIdentityPublicKey_; }
      set {
        networkIdentityPublicKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ValidatorPublicKeys);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ValidatorPublicKeys other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AccountAddress != other.AccountAddress) return false;
      if (ConsensusPublicKey != other.ConsensusPublicKey) return false;
      if (NetworkSigningPublicKey != other.NetworkSigningPublicKey) return false;
      if (NetworkIdentityPublicKey != other.NetworkIdentityPublicKey) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (AccountAddress.Length != 0) hash ^= AccountAddress.GetHashCode();
      if (ConsensusPublicKey.Length != 0) hash ^= ConsensusPublicKey.GetHashCode();
      if (NetworkSigningPublicKey.Length != 0) hash ^= NetworkSigningPublicKey.GetHashCode();
      if (NetworkIdentityPublicKey.Length != 0) hash ^= NetworkIdentityPublicKey.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (AccountAddress.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(AccountAddress);
      }
      if (ConsensusPublicKey.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(ConsensusPublicKey);
      }
      if (NetworkSigningPublicKey.Length != 0) {
        output.WriteRawTag(26);
        output.WriteBytes(NetworkSigningPublicKey);
      }
      if (NetworkIdentityPublicKey.Length != 0) {
        output.WriteRawTag(34);
        output.WriteBytes(NetworkIdentityPublicKey);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (AccountAddress.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(AccountAddress);
      }
      if (ConsensusPublicKey.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(ConsensusPublicKey);
      }
      if (NetworkSigningPublicKey.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(NetworkSigningPublicKey);
      }
      if (NetworkIdentityPublicKey.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(NetworkIdentityPublicKey);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ValidatorPublicKeys other) {
      if (other == null) {
        return;
      }
      if (other.AccountAddress.Length != 0) {
        AccountAddress = other.AccountAddress;
      }
      if (other.ConsensusPublicKey.Length != 0) {
        ConsensusPublicKey = other.ConsensusPublicKey;
      }
      if (other.NetworkSigningPublicKey.Length != 0) {
        NetworkSigningPublicKey = other.NetworkSigningPublicKey;
      }
      if (other.NetworkIdentityPublicKey.Length != 0) {
        NetworkIdentityPublicKey = other.NetworkIdentityPublicKey;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            AccountAddress = input.ReadBytes();
            break;
          }
          case 18: {
            ConsensusPublicKey = input.ReadBytes();
            break;
          }
          case 26: {
            NetworkSigningPublicKey = input.ReadBytes();
            break;
          }
          case 34: {
            NetworkIdentityPublicKey = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
